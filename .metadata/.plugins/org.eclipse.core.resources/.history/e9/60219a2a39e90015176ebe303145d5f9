package com.hibernate;

import java.util.ArrayList;
import java.util.List;

import org.hibernate.Session;
import org.hibernate.SessionFactory;
import org.hibernate.Transaction;
import org.hibernate.cfg.Configuration;

public class StudentService {

	public void addStudent(Student student) {
        Transaction trns = null;
        Configuration cfg = new Configuration();
        cfg.configure("com/hibernate/hibernate.cfg.xml");
 
        SessionFactory factory = cfg.buildSessionFactory();
        Session session = factory.openSession();
        try {
            trns = session.beginTransaction();
            session.save(student);
            session.getTransaction().commit();
        } catch (RuntimeException e) {
            if (trns != null) {
                trns.rollback();
            }
            e.printStackTrace();
        } finally {
            session.flush();
            session.close();
        }
    }
	
	public void updateUser(Student stu){
		Transaction trns = null;
		Configuration cfg = new Configuration();
        cfg.configure("com/hibernate/hibernate.cfg.xml");
 
        SessionFactory factory = cfg.buildSessionFactory();
        Session session = factory.openSession();
        try {
            trns = session.beginTransaction();
            session.update(stu);
            session.getTransaction().commit();
        } catch (RuntimeException e) {
            if (trns != null) {
                trns.rollback();
            }
            e.printStackTrace();
        } finally {
            session.flush();
            session.close();
        }
	}
	
	public void deleteUser(int stuId) {
		Transaction trns = null;
		Configuration cfg = new Configuration();
        cfg.configure("com/hibernate/hibernate.cfg.xml");
 
        SessionFactory factory = cfg.buildSessionFactory();
        Session session = factory.openSession();
		 try {
	            trns = session.beginTransaction();
	            Student user = (Student) session.load(Student.class, new Integer(stuId));
	            session.delete(user);
	            session.getTransaction().commit();
	        } catch (RuntimeException e) {
	            if (trns != null) {
	                trns.rollback();
	            }
	            e.printStackTrace();
	        } finally {
	            session.flush();
	            session.close();
	        }
	}
	
	@SuppressWarnings("unchecked")
	public List<Student> getAllStudents(){
		List<Student> users = new ArrayList<Student>();
        Transaction trns = null;
        Configuration cfg = new Configuration();
        cfg.configure("com/hibernate/hibernate.cfg.xml");
 
        SessionFactory factory = cfg.buildSessionFactory();
        Session session = factory.openSession();
        try {
            trns = session.beginTransaction();
            users = session.createQuery("from Student").list();
        } catch (RuntimeException e) {
            e.printStackTrace();
        } finally {
            session.flush();
            session.close();
        }
        return users;
    }
	
}
